(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{303:function(t,e,s){"use strict";s.r(e);var v=s(35),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"frontmatter-title"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),v("h2",{attrs:{id:"websocket"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[t._v("#")]),t._v(" WebSocket")]),t._v(" "),v("p",[t._v('WebSocket 是运行在 Web，也就是 HTTP 上的 Socket 通信规范，提供与 "TCP Socket" 类似的功能，使用它就可以像 "TCP Socket" 一样调用下层协议栈，任意地收发数据。')]),t._v(" "),v("p",[v("img",{attrs:{src:s(510),alt:"websocket"}})]),t._v(" "),v("p",[t._v("更准确地说，WebSocket 是一种基于 TCP 的轻量级网络通信协议，在地位上与 HTTP 平级的。")]),t._v(" "),v("h2",{attrs:{id:"为什么要有-websocket"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么要有-websocket"}},[t._v("#")]),t._v(" 为什么要有 WebSocket")]),t._v(" "),v("p",[t._v("其实 WebSocket 与 HTTP/2 一样，都是为了解决 HTTP 某方面的缺陷而诞生的。HTTP/2 针对的是"),v("strong",[t._v("队头阻塞")]),t._v("，而 WebSocket 针对的是“请求 - 应答”通信模式。")]),t._v(" "),v("p",[t._v("“请求 - 应答”是一种"),v("strong",[t._v("半双工")]),t._v("的通信模式，虽然可以双向收发数据，但同一时刻只能一个方向上有动作，传输效率低。更关键的一点，它是一种“被动”通信模式，服务器只能“被动”响应客户端的请求，无法主动向客户端发送数据。")]),t._v(" "),v("p",[t._v("虽然后来的 HTTP/2、HTTP/3 新增了 "),v("code",[t._v("Stream")]),t._v("、"),v("code",[t._v("Server Push")]),t._v(" 等特性，但“请求 - 应答”依然是主要的工作方式。这就导致 HTTP 难以应用在动态页面、即时消息、网络游戏等要求"),v("strong",[t._v("实时通信")]),t._v("的领域。")]),t._v(" "),v("p",[t._v("在 WebSocket 出现之前，在浏览器环境里用 JavaScript 开发实时 Web 应用很麻烦，因为浏览器是一个“受限的沙盒”，不能用 TCP，只有 HTTP 协议可用，所以就出现了很多“变通”的技术，"),v("strong",[t._v("轮询")]),t._v(" (polling) 就是比较常用的一种。")]),t._v(" "),v("p",[t._v("简单地说，轮询就是不停地向服务器发送 HTTP 请求，问有没有数据，有数据的话服务器就用响应报文回应。如果轮询的频率比较高，那么就可以近似地实现实时通信的效果。")]),t._v(" "),v("p",[t._v("但轮询的缺点也很明显，反复发送无效查询请求耗费了大量的带宽和 CPU 资源，非常不经济。")]),t._v(" "),v("p",[t._v("所以，为了克服 HTTP “请求 - 应答”模式的缺点，WebSocket 就应运而生了。它原来是 HTML5 的一部分，后来自立门户，形成了一个单独的标准，RFC 文档编号是 6455。")]),t._v(" "),v("h2",{attrs:{id:"websocket-特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#websocket-特点"}},[t._v("#")]),t._v(" WebSocket 特点")]),t._v(" "),v("p",[t._v("WebSocket 是一个真正"),v("strong",[t._v("全双工")]),t._v("的通信协议，与 TCP 一样，客户端和服务器都可以随时向对方发送数据，而不用像 HTTP 那般。")]),t._v(" "),v("p",[t._v("于是，服务器就可以变得更加“主动”。一旦后台有新的数据，就可以立即推送给客户端，不需要客户端轮询，实时通信的效率也就提高了。")])])}),[],!1,null,null,null);e.default=_.exports},510:function(t,e,s){t.exports=s.p+"assets/img/websocket.ee6685c7.png"}}]);