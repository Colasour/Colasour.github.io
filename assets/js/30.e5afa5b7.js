(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{307:function(a,t,e){"use strict";e.r(t);var v=e(35),r=Object(v.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h1",{attrs:{id:"frontmatter-title"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[a._v("#")]),a._v(" "+a._s(a.$frontmatter.title))]),a._v(" "),v("h2",{attrs:{id:"缓存代理服务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#缓存代理服务"}},[a._v("#")]),a._v(" 缓存代理服务")]),a._v(" "),v("p",[v("img",{attrs:{src:e(524),alt:"缓存代理"}})]),a._v(" "),v("p",[a._v("在 HTTP 的缓存体系中，缓存代理的身份十分特殊，它“既是客户端，又是服务器”，同时也“既不是客户端，又不是服务器”。")]),a._v(" "),v("p",[a._v("说它“既是客户端，又是服务器”，是因为它面向源服务器时是客户端，在面向客户端时又是服务器，所以它既可以用客户端的缓存控制策略也可以用服务器的缓存控制策略。")]),a._v(" "),v("p",[a._v("但缓存也“既不是客户端，又不是服务器”，因为它只是一个数据的“中转站”，并不是真正的数据消费者和生产者，所以还需要有一些新的 "),v("code",[a._v("Cache-Control")]),a._v(" 属性来对它做特别的约束。")]),a._v(" "),v("h3",{attrs:{id:"private、public"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#private、public"}},[a._v("#")]),a._v(" private、public")]),a._v(" "),v("p",[v("code",[a._v("public")]),a._v(" 表示该响应可以被任何中间人（如中间代理、CDN 等）缓存。")]),a._v(" "),v("p",[v("code",[a._v("private")]),a._v(" "),v("strong",[a._v("默认")]),a._v("，表示该响应是专门用于某单个用户的，中间人不能缓存此响应，该响应只能应用于浏览器私有缓存中。")]),a._v(" "),v("div",{staticClass:"language-http extra-class"},[v("pre",{pre:!0,attrs:{class:"language-http"}},[v("code",[v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Cache-Control:")]),a._v(" private\n"),v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Cache-Control:")]),a._v(" public\n")])])]),v("h3",{attrs:{id:"proxy-revalidate"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#proxy-revalidate"}},[a._v("#")]),a._v(" proxy-revalidate")]),a._v(" "),v("p",[a._v("缓存失效后的重新验证需要区分开，"),v("code",[a._v("must-revalidate")]),a._v(" 是只要过期就必须回源服务器验证，而 "),v("code",[a._v("proxy-revalidate")]),a._v(" 只要求代理的缓存过期后必须验证，客户端不必回源，只验证到代理这个环节即可。")]),a._v(" "),v("h3",{attrs:{id:"s-maxage"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#s-maxage"}},[a._v("#")]),a._v(" s-maxage")]),a._v(" "),v("p",[a._v("缓存的生存时间可以使用新的 "),v("code",[a._v("s-maxage")]),a._v("，只限定代理上能够存多久，而客户端仍然使用 "),v("code",[a._v("max-age")]),a._v("。")]),a._v(" "),v("h3",{attrs:{id:"no-transform"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#no-transform"}},[a._v("#")]),a._v(" no-transform")]),a._v(" "),v("p",[a._v("代理专用的属性 "),v("code",[a._v("no-transform")]),a._v("，代理的时候会对缓存下来的数据做一些优化，比如把图片生存 "),v("code",[a._v("png")]),a._v("、"),v("code",[a._v("webp")]),a._v(" 等几种格式，方便今后的请求处理，而 "),v("code",[a._v("no-transform")]),a._v(" 就会禁止这样子做。")]),a._v(" "),v("p",[v("img",{attrs:{src:e(525),alt:"代理缓存服务"}})]),a._v(" "),v("h2",{attrs:{id:"客户端的缓存控制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#客户端的缓存控制"}},[a._v("#")]),a._v(" 客户端的缓存控制")]),a._v(" "),v("p",[v("img",{attrs:{src:e(526),alt:"客户端缓存代理"}})]),a._v(" "),v("p",[a._v("关于缓存的生存时间，多了两个新属性 "),v("code",[a._v("max-stale")]),a._v(" 和 "),v("code",[a._v("min-fresh")]),a._v("。")]),a._v(" "),v("p",[v("code",[a._v("max-stale")]),a._v(" 的意思是如果代理上的缓存过期了也可以接受，但不能过期太多，超过 "),v("code",[a._v("x")]),a._v(" 秒也不会要。"),v("code",[a._v("min-fresh")]),a._v(" 的意思是缓存必须有效，而且必须在 "),v("code",[a._v("x")]),a._v(" 秒后依然有效。")]),a._v(" "),v("p",[a._v("有时客户端还会发出一个特比的  "),v("code",[a._v("only-if-cached")]),a._v(" 属性，表示只接受代理缓存的数据，不接受源服务器的响应。如果代理商没有缓存或者缓存过期，就应该高忒客户端返回一个 "),v("code",[a._v("504 Gateway Timeout")]),a._v("。")]),a._v(" "),v("h2",{attrs:{id:"其他问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#其他问题"}},[a._v("#")]),a._v(" 其他问题")]),a._v(" "),v("h3",{attrs:{id:"vary-字段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vary-字段"}},[a._v("#")]),a._v(" Vary 字段")]),a._v(" "),v("p",[v("code",[a._v("Vary")]),a._v(" 字段是内容协商的结果，相当于报文的一个版本标记。")]),a._v(" "),v("p",[a._v("同一个请求，经过内容协商后可能会有不同的字符集、编码、浏览器等保本。比如， "),v("code",[a._v("Vary: Accept-Encoding")]),a._v("、"),v("code",[a._v("Vary: User-Agent")]),a._v("，缓存代理必须要存储这些不同的版本。")]),a._v(" "),v("p",[a._v("当再收到相同的请求时，代理就读取缓存里的 "),v("code",[a._v("Vary")]),a._v("，对比请求头里相应的 "),v("code",[a._v("Accept-Encoding")]),a._v("、"),v("code",[a._v("User-Agent")]),a._v(" 等字段，如果和上一个请求的完全匹配，比如都是 "),v("code",[a._v("gzip")]),a._v("、"),v("code",[a._v("Chrome")]),a._v("，就表示版本一致，可以返回缓存的数据。")]),a._v(" "),v("h3",{attrs:{id:"缓存清理-purge"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#缓存清理-purge"}},[a._v("#")]),a._v(" 缓存清理 Purge")]),a._v(" "),v("p",[v("code",[a._v("Purge")]),a._v(" 缓存清理对于代理也是非常重要的功能，例如：")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("过期的数据应该及时淘汰，避免占用空间")])]),a._v(" "),v("li",[v("p",[a._v("源站的资源有更新，需要删除旧版本，主动换成最新版（即刷新）")])]),a._v(" "),v("li",[v("p",[a._v("有时候会缓存了一些本不该存储的信息，例如网络谣言或者危险链接，必须尽快把它们删除")])])]),a._v(" "),v("p",[a._v("清理缓存的方法有很多，比较常用的一种做法是使用自定义请求方法 "),v("code",[a._v("PURGE")]),a._v("，发给代理服务器，要求删除 URI 对应的缓存数据。")])])}),[],!1,null,null,null);t.default=r.exports},524:function(a,t,e){a.exports=e.p+"assets/img/cache_proxy.5e8d10b5.png"},525:function(a,t,e){a.exports=e.p+"assets/img/proxy_cache.dd65b95d.png"},526:function(a,t,e){a.exports=e.p+"assets/img/client_cache_proxy.81b9609c.png"}}]);