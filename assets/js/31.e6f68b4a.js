(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{310:function(t,e,v){"use strict";v.r(e);var a=v(35),_=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"frontmatter-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),a("h2",{attrs:{id:"mime"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mime"}},[t._v("#")]),t._v(" MIME")]),t._v(" "),a("p",[a("strong",[t._v("媒体类型（Multipurpose Internet Mail Extensions，MIME）")]),t._v(" 是一种标准，用来表示文档、文件或字节流的性质和格式。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("❕ 浏览器通常使用 MIME 类型（而不是文件的扩展名）来确定如何处理 URL，因此 Web 服务器在响应头 "),a("code",[t._v("Content-Type")]),t._v(" 中添加正确的 MIME 类型非常重要。如果配置不正确，浏览器可能会曲解文件内容，网站将无法正常工作，并且下载的文件也会被错误处理。")])]),t._v(" "),a("p",[t._v("MIME 的组成结构非常简单：由类型与子类型两个字符串中间用 "),a("code",[t._v("/")]),t._v(" 分隔而组成，不允许空格存在。MIME 类型对大小写不敏感，但是传统写法都是小写。")]),t._v(" "),a("h3",{attrs:{id:"独立类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#独立类型"}},[t._v("#")]),t._v(" 独立类型")]),t._v(" "),a("p",[t._v("独立类型表明了对文件的分类，可以是如下之一：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("描述")]),t._v(" "),a("th",[t._v("典型示例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("text")])]),t._v(" "),a("td",[t._v("表明文件是普通文本")]),t._v(" "),a("td",[a("code",[t._v("text/plain")]),t._v("， "),a("code",[t._v("text/html")]),t._v("， "),a("code",[t._v("text/css")]),t._v("，"),a("code",[t._v("text/javascript")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("image")])]),t._v(" "),a("td",[t._v("表明是某种图像，不包括视频")]),t._v(" "),a("td",[a("code",[t._v("image/gif")]),t._v("， "),a("code",[t._v("image/png")]),t._v("，"),a("code",[t._v("image/jpeg")]),t._v("，"),a("code",[t._v("image/bmp")]),t._v("，"),a("code",[t._v("image/webp")]),t._v(" "),a("code",[t._v("image/x-icon")]),t._v("， "),a("code",[t._v("image/vnd.microsoft.icon")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("audio")])]),t._v(" "),a("td",[t._v("表明是某种音频文件")]),t._v(" "),a("td",[a("code",[t._v("audio/midi")]),t._v("，"),a("code",[t._v("audio/mpeg")]),t._v("，"),a("code",[t._v("audio/webm")]),t._v("，"),a("code",[t._v("audio/ogg")]),t._v("，"),a("code",[t._v("audio/wav")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("video")])]),t._v(" "),a("td",[t._v("表明是某种视频文件")]),t._v(" "),a("td",[a("code",[t._v("video/webm")]),t._v("，"),a("code",[t._v("video/ogg")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("application")])]),t._v(" "),a("td",[t._v("表明是某种二进制数据")]),t._v(" "),a("td",[a("code",[t._v("application/octet-stream")]),t._v("， "),a("code",[t._v("application/pkcs12")]),t._v("，"),a("code",[t._v("application/vnd.mspowerpoint")]),t._v("，"),a("code",[t._v("application/xhtml+xml")]),t._v("，"),a("code",[t._v("application/xml")]),t._v("， "),a("code",[t._v("application/pdf")])])])])]),t._v(" "),a("p",[t._v("对于 "),a("code",[t._v("text")]),t._v(" 文件类型若没有特定的 "),a("code",[t._v("subtype")]),t._v("，就使用 "),a("code",[t._v("text/plain")]),t._v("。类似的，二进制文件没有特定的已知 "),a("code",[t._v("subtype")]),t._v("，就使用 "),a("code",[t._v("application/octet-stream")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"multipart-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multipart-类型"}},[t._v("#")]),t._v(" Multipart 类型")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("multipart/form-data   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可用于联系 HTML Forms 和 POST 方法")]),t._v("\nmultipart/byteranges  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用状态码 206 Partial Content 来发送整个文件的子集")]),t._v("\n")])])]),a("p",[a("code",[t._v("Multipart")]),t._v(" 类型表示细分领域的文件类型的种类，经常对应不同的 MIME 类型。这是复合文件的一种表现方式。")]),t._v(" "),a("h2",{attrs:{id:"压缩数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#压缩数据"}},[t._v("#")]),t._v(" 压缩数据")]),t._v(" "),a("p",[t._v("仅有 MIME 类型还不够，因为 HTTP 在传输时为了节约带宽，有时候还会"),a("strong",[t._v("压缩数据")])]),t._v(" "),a("p",[t._v("Encoding 类型表明数据是用的什么编码格式，这样对方才能正确解压缩，还原出原始的数据。Encoding 类型常用的只有下面三种：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("gzip")]),t._v("：GNU zip 压缩格式，也是互联网上最流行的压缩格式")]),t._v(" "),a("li",[a("code",[t._v("deflate")]),t._v("："),a("code",[t._v("zlib")]),t._v(" (deflate) 压缩格式，流行程度仅次于 "),a("code",[t._v("gzip")])]),t._v(" "),a("li",[a("code",[t._v("br")]),t._v("：一种专门为 HTTP 优化的新压缩算法 (Brotli)")])]),t._v(" "),a("h2",{attrs:{id:"数据类型使用的头字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型使用的头字段"}},[t._v("#")]),t._v(" 数据类型使用的头字段")]),t._v(" "),a("p",[t._v("有了 MIME 类型和 Encoding 类型，无论是浏览器还是服务器都可以轻松识别出 "),a("code",[t._v("body")]),t._v(" 的类型，也就能够正确处理数据了。")]),t._v(" "),a("p",[t._v("HTTP 协议为此定义了两个 "),a("code",[t._v("Accept")]),t._v(" 请求头字段和两个 "),a("code",[t._v("Content")]),t._v(" 实体头字段，用于客户端和服务器进行“"),a("strong",[t._v("内容协商")]),t._v("”。")]),t._v(" "),a("p",[a("img",{attrs:{src:v(537),alt:"内容协商"}})]),t._v(" "),a("p",[a("code",[t._v("Accept")]),t._v(" 字段标记的是客户端可理解的 MIME 类型，可以用 "),a("code",[t._v(",")]),t._v(" 做分隔符列出多个类型，让服务器有更多的选择余地：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("Accept"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" text/html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("application/xml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("image/webp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("image/png\n")])])]),a("p",[t._v("相应的，服务器会在响应报文里用头字段 "),a("code",[t._v("Content-Type")]),t._v(" 告诉实体数据的真实类型：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("Content-Type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" text/html\nContent-Type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" image/png\n")])])]),a("p",[a("code",[t._v("Accept-Encoding")]),t._v(" 字段标记的是客户端支持的压缩格式，同样也可以用 "),a("code",[t._v(",")]),t._v(" 列出多个，服务器可以选择其中一种来压缩数据，实际使用的压缩格式放在响应头字段 "),a("code",[t._v("Content-Encoding")]),t._v(" 里：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("Accept-Encoding"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" gzip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" deflate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" br\nContent-Encoding"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" gzip\n")])])]),a("p",[t._v("不过这两个字段是可以省略的：")]),t._v(" "),a("ul",[a("li",[t._v("如果请求报文里没有 "),a("code",[t._v("Accept-Encoding")]),t._v(" 字段，就表示"),a("strong",[t._v("客户端不支持压缩数据")])]),t._v(" "),a("li",[t._v("如果响应报文里没有 "),a("code",[t._v("Content-Encoding")]),t._v(" 字段，就表示"),a("strong",[t._v("响应数据没有被压缩")])])]),t._v(" "),a("h2",{attrs:{id:"语言类型使用的头字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语言类型使用的头字段"}},[t._v("#")]),t._v(" 语言类型使用的头字段")]),t._v(" "),a("p",[t._v("HTTP 协议也使用 "),a("code",[t._v("Accept")]),t._v(" 请求头字段和 "),a("code",[t._v("Content")]),t._v(" 实体头字段，用于客户端和服务器就"),a("strong",[t._v("语言与编码")]),t._v("进行“"),a("strong",[t._v("内容协商")]),t._v("”。")]),t._v(" "),a("p",[a("code",[t._v("Accept-Language")]),t._v(" 字段标记了客户端可理解的自然语言，也允许用 "),a("code",[t._v(",")]),t._v(" 做分隔符列出多个类型：")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Accept-Language:")]),t._v(" zh-CN, zh, en\n")])])]),a("p",[t._v("相应的，服务器应该在响应报文里用头字段 "),a("code",[t._v("Content-Language")]),t._v(" 告诉客户端实体数据使用的实际语言类型：")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-Language:")]),t._v(" zh-CN\n")])])]),a("p",[t._v("❗ 字符集在 HTTP 里使用的请求头字段是 "),a("code",[t._v("Accept-Charset")]),t._v("，但响应头里却没有对应的 "),a("code",[t._v("Content-Charset")]),t._v("，而是在 "),a("code",[t._v("Content-Type")]),t._v(" 字段的数据类型后面用 "),a("code",[t._v("charset=xxx")]),t._v(" 来表示，这点需要特别注意。")]),t._v(" "),a("p",[t._v("例如，浏览器请求 GBK 或 UTF-8 的字符集，然后服务器返回的是 UTF-8 编码：")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Accept-Charset:")]),t._v(" gbk, utf-8\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-Type:")]),t._v(" text/html; charset=utf-8\n")])])]),a("p",[t._v("不过现在的浏览器都支持多种字符集，通常不会发送 "),a("code",[t._v("Accept-Charset")]),t._v("，而服务器也不会发送 "),a("code",[t._v("Content-Language")]),t._v("，因为使用的语言完全可以由字符集推断出来，所以在请求头里一般只会有 "),a("code",[t._v("Accept-Language")]),t._v(" 字段，响应头里只会有 "),a("code",[t._v("Content-Type")]),t._v(" 字段。")]),t._v(" "),a("p",[a("img",{attrs:{src:v(538),alt:"语言类型内容协商"}})]),t._v(" "),a("h2",{attrs:{id:"内容协商的质量值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内容协商的质量值"}},[t._v("#")]),t._v(" 内容协商的质量值")]),t._v(" "),a("p",[t._v("在 HTTP 协议里用 "),a("code",[t._v("Accept")]),t._v("、"),a("code",[t._v("Accept-Encoding")]),t._v("、"),a("code",[t._v("Accept-Language")]),t._v(" 等请求头字段进行内容协商时，还可以用一种特殊的 "),a("code",[t._v("q")]),t._v(" 参数表示"),a("strong",[t._v("权重")]),t._v("来设定优先级，这里的 "),a("code",[t._v("q")]),t._v(" 时 quanlity factor 的意思。")]),t._v(" "),a("p",[t._v("权重的最大值时 "),a("code",[t._v("1")]),t._v("，最小值是 "),a("code",[t._v("0.01")]),t._v("，默认值是 "),a("code",[t._v("1")]),t._v("，如果值是 "),a("code",[t._v("0")]),t._v(" 就表示拒绝。具体的形式是在数据类型或语言代码后面加一个"),a("code",[t._v(";")]),t._v("，然后是 "),a("code",[t._v("q=value")]),t._v("。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("❕ 注意，在大多数编程语言里 "),a("code",[t._v(";")]),t._v("的断句语气要强于 "),a("code",[t._v(",")]),t._v("，而在 HTTP 的内容协商里却恰好反了过来，"),a("code",[t._v(";")]),t._v(" 的意义是小于 "),a("code",[t._v(",")]),t._v(" 的。")])]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Accept:")]),t._v(" text/html, application/xml;q=0.9, */*;q=0.8\n")])])]),a("p",[t._v("上面的字段表示浏览器最希望使用的是 HTML 文件，权重是 "),a("code",[t._v("1")]),t._v("，其次是 XML 文件，权重是 "),a("code",[t._v("0.9")]),t._v("，最后是任意数据类型，权重是 "),a("code",[t._v("0.8")]),t._v("。服务器收到请求头后，就会计算权重，再根据自己的实际情况优先输出 HTML 或者 XML。")]),t._v(" "),a("h2",{attrs:{id:"内容协商的结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内容协商的结果"}},[t._v("#")]),t._v(" 内容协商的结果")]),t._v(" "),a("p",[t._v("内容协商的过程是"),a("strong",[t._v("不透明的")]),t._v("，每个 Web 服务器使用的算法都不一样。但有的时候，服务器会在响应头里多加一个 "),a("code",[t._v("Vary")]),t._v(" 字段，记录服务器在内容协商时参考的请求头字段，给出一点信息：")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Vary:")]),t._v(" Accept-Encoding, User-Agent, Accept\n")])])]),a("p",[t._v("上面的 "),a("code",[t._v("Vary")]),t._v(" 字段表示服务器依据了 "),a("code",[t._v("Accept-Encoding")]),t._v("、"),a("code",[t._v("User-Agent")]),t._v(" 和 "),a("code",[t._v("Accept")]),t._v(" 这三个头字段，然后决定了发回的响应报文。")]),t._v(" "),a("p",[a("code",[t._v("Vary")]),t._v(" 字段可以认为是响应报文的一个特殊的“版本标记”。每当 "),a("code",[t._v("Accept")]),t._v(" 等请求头变化时，"),a("code",[t._v("Vary")]),t._v(" 也会随着响应报文一起变化。也就是说，同一个 URI 可能会有多个不同的“版本”，主要用在传输链路中间的代理服务器"),a("strong",[t._v("实现缓存服务。")])]),t._v(" "),a("p",[a("img",{attrs:{src:v(539),alt:"实体数据"}})])])}),[],!1,null,null,null);e.default=_.exports},537:function(t,e,v){t.exports=v.p+"assets/img/content_negotiation.5191bce1.png"},538:function(t,e,v){t.exports=v.p+"assets/img/lang_type.0e9bcd69.png"},539:function(t,e,v){t.exports=v.p+"assets/img/entity_data.b2118315.png"}}]);