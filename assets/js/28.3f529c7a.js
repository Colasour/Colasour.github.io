(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{296:function(t,r,a){"use strict";a.r(r);var _=a(35),s=Object(_.a)({},(function(){var t=this,r=t.$createElement,_=t._self._c||r;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"frontmatter-title"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),_("h2",{attrs:{id:"tcp-ip-网络分层模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip-网络分层模型"}},[t._v("#")]),t._v(" TCP/IP 网络分层模型")]),t._v(" "),_("p",[_("strong",[t._v("TCP/IP 网络分层模型")]),t._v("是目前事实上的网络通信标准。以“"),_("strong",[t._v("分层")]),t._v("”的概念，把复杂的网络通信划分出多个层次，再给每一个层次分配不同的职责，层次内只专心做自己的事情就好。")]),t._v(" "),_("p",[_("img",{attrs:{src:a(493),alt:"四层模型"}})]),t._v(" "),_("p",[t._v("TCP/IP 协议总共有四层，每一层需要下层的支撑，同时又支撑着上层，任何一层被抽掉都可能会导致整个协议栈坍塌。")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",[t._v("❗ 注意它的层次顺序是“"),_("strong",[t._v("从下往上")]),t._v("”数的，所以第一层就是最下面的一层。")])]),t._v(" "),_("h3",{attrs:{id:"链路层-link-layer"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#链路层-link-layer"}},[t._v("#")]),t._v(" 链路层 link layer")]),t._v(" "),_("p",[_("strong",[t._v("链路层 (link layer)")]),t._v(" 负责在以太网、WiFi 这样的底层网络上发送原始数据包，工作在网卡这个层次，使用 MAC 地址来标记网络上的设备，所以有时也叫做 "),_("strong",[t._v("MAC 层")]),t._v("。")]),t._v(" "),_("h3",{attrs:{id:"网际层-internet-layer"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#网际层-internet-layer"}},[t._v("#")]),t._v(" 网际层 internet layer")]),t._v(" "),_("p",[_("strong",[t._v("网际层 (internet layer)")]),t._v("，也称为"),_("strong",[t._v("网络互连层")]),t._v("，IP 协议就处在这一层。\n因为 IP 协议定义了“IP 地址”的概念，所以就可以在“链路层”的基础上，用 IP 地址取代 MAC 地址，把许许多多的局域网、广域网连接成一个虚拟的巨大网络，在这个网络里找设备时只要把 IP 地址再“翻译”成 MAC 地址即可。")]),t._v(" "),_("h3",{attrs:{id:"传输层-transport-layer"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#传输层-transport-layer"}},[t._v("#")]),t._v(" 传输层 transport layer")]),t._v(" "),_("p",[_("strong",[t._v("传输层 (transport layer)")]),t._v(" 的职责是保证数据在 IP 地址标记的两点之间“可靠”地传输，是 TCP 协议工作的层次，另外还有 UDP 协议。")]),t._v(" "),_("p",[t._v("TCP 是一个"),_("strong",[t._v("有状态")]),t._v("的协议，需要先与对方建立连接后才能发送数据，而且保证数据不丢失不重复。而 UP 则比较简单，它"),_("strong",[t._v("无状态")]),t._v("，不用事先建立连接就可以任意发送数据，但不保证数据一定会发到对方。两个协议的另一个重要区别在于数据的形式，TCP 的数据是连续的“字节流”，有先后顺序；而 UDP 则是分散的小数据包，是顺序发，乱序收。")]),t._v(" "),_("h3",{attrs:{id:"应用层-application-layer"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#应用层-application-layer"}},[t._v("#")]),t._v(" 应用层 application layer")]),t._v(" "),_("p",[_("strong",[t._v("应用层 (application layer)")]),t._v(" 有各种面向具体应用的协议，例如 Telnet、SSH、FTP、SMTP、HTTP 等等。")]),t._v(" "),_("p",[t._v("MAC 层的传输单位是"),_("strong",[t._v("帧 (frame)")]),t._v("，IP 层的传输单位是"),_("strong",[t._v("包 (packet)")]),t._v("，TCP 层的传输单位是"),_("strong",[t._v("段 (segment)")]),t._v("，HTTP 的传输单位则是"),_("strong",[t._v("消息")]),t._v("或"),_("strong",[t._v("报文 (message)")]),t._v("，但这些名字并没有什么本质的区别，可以统称为"),_("strong",[t._v("数据包")]),t._v("。")]),t._v(" "),_("h2",{attrs:{id:"osi-网络分层模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#osi-网络分层模型"}},[t._v("#")]),t._v(" OSI 网络分层模型")]),t._v(" "),_("p",[t._v("**Open System Interconnection Reference Model（开放式系统互联通信参考模型，OSI）**模型分成了七层，部分层次与 TCP/IP 很像，从下到上分别是：")]),t._v(" "),_("p",[_("img",{attrs:{src:a(494),alt:"OSI分层模型"}})]),t._v(" "),_("ol",[_("li",[t._v("第一层：物理层，网络的物理形式，例如电缆、光纤、网卡、集线器等等")]),t._v(" "),_("li",[t._v("第二层：数据链路层，它基本相当于 TCP/IP 的链路层")]),t._v(" "),_("li",[t._v("第三层：网络层，相当于 TCP/IP 的网际层")]),t._v(" "),_("li",[t._v("第四层：传输层，相当于 TCP/IP 的传输层")]),t._v(" "),_("li",[t._v("第五层：会话层，维护网络种的连接状态，即保持会话和同步")]),t._v(" "),_("li",[t._v("第六层：表示层，把数据转换为合适、可理解的语法和语义")]),t._v(" "),_("li",[t._v("第七层：应用层，面向具体的应用传输数据")])]),t._v(" "),_("p",[t._v("OSI 分层模型在发布的时候就明确地表示是一个“参考”，不是强制标准。")]),t._v(" "),_("h2",{attrs:{id:"两个分层模型的映射关系"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#两个分层模型的映射关系"}},[t._v("#")]),t._v(" 两个分层模型的映射关系")]),t._v(" "),_("p",[_("img",{attrs:{src:a(495),alt:"分层模型的映射关系"}})]),t._v(" "),_("p",[t._v("OSI 分层模型在四层以上分的太细，而 TCP/IP 实际应用时的会话管理、编码转换、压缩等和具体应用经常联系的很紧密，很难分开。例如，HTTP 协议就同时包含了连接管理和数据格式定义。")]),t._v(" "),_("p",[t._v("所谓的“四层负载均衡”就是指工作在"),_("strong",[t._v("传输层")]),t._v("上，基于 TCP/IP 协议的特性，例如 IP 地址、端口号等实现对后端服务器的负载均衡。")]),t._v(" "),_("p",[t._v("所谓的“七层负载均衡”就是指工作在"),_("strong",[t._v("应用层")]),t._v("上，看到的是 HTTP 协议，解析 HTTP 报文里的 URI、主机名、资源类型等数据，再用适当的策略.")])])}),[],!1,null,null,null);r.default=s.exports},493:function(t,r,a){t.exports=a.p+"assets/img/four_model.2b8fee82.png"},494:function(t,r,a){t.exports=a.p+"assets/img/OSI.3abcf146.png"},495:function(t,r,a){t.exports=a.p+"assets/img/model_relative.9d9b3c92.png"}}]);